name: Update DB and Plots
on:
  repository_dispatch:
    types: [update-database-and-plots]

jobs:
  delete_db_and_plots:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.client_payload.ref }}
        repository: killenden/${{ github.event.client_payload.repo_name }}

    - name: Print checked out branch
      run: |
        echo "Checked out branch: $(git rev-parse --abbrev-ref HEAD)"
        
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas numpy matplotlib scikit-learn pysqlite3 beautifulsoup4 requests
    
    - name: Run stats/YearAndWeek.py script
      id: run_yearandweek
      run: |
        python stats/YearAndWeek.py
        echo "year=$(cat $GITHUB_OUTPUT | grep '^year=' | cut -d'=' -f2-)" >> $GITHUB_OUTPUT
        echo "weeks=$(cat $GITHUB_OUTPUT | grep '^weeks=' | cut -d'=' -f2-)" >> $GITHUB_OUTPUT
      
    - name: Print year and weeks
      run: |
        echo "Year: ${{ steps.run_yearandweek.outputs.year }}"
        echo "Weeks: ${{ steps.run_yearandweek.outputs.weeks }}"
      
    - name: Delete old db if they exist
      run: |
        db_number=${{ steps.run_yearandweek.outputs.year }}
        if [ -f "stats/database/$db_number.db" ]; then
          rm -r stats/database/$db_number.db
          echo "db_deleted=true" >> $GITHUB_ENV
        else
          echo "db_deleted=false" >> $GITHUB_ENV
        fi

    - name: Delete old plots if they exist
      run: |
        db_number=${{ steps.run_yearandweek.outputs.year }}
        if [ -d "$stats/plots/db_number" ]; then
          rm -r $stats/plots/db_number/*.png
          echo "plots_deleted=true" >> $GITHUB_ENV
        else
          echo "plots_deleted=false" >> $GITHUB_ENV
        fi
    
    - name: Set output
      id: set_output
      run: |
        echo "::set-output name=db_deleted::${{ env.db_deleted }}"
        echo "::set-output name=plots_deleted::${{ env.plots_deleted }}"
  
    - name: Print output
      run: |
        echo "DB Deleted: ${{ steps.set_output.outputs.db_deleted }}"
        echo "Plots Deleted: ${{ steps.set_output.outputs.plots_deleted }}"

    - name: Delete Temp File
      run: |
        if [ -f ".temp" ]; then
          rm -r .temp
        fi
    
    - name: Stage changes
      run: |
        git add -A

    - name: Check for changes
      run: |
        git status
        git diff

    - name: Commit changes
      uses: EndBug/add-and-commit@v9
      with:
        add: '.'
        default_author: github_actions
        message: '[BOT] Delete graphs and database for DB number ${{ steps.run_yearandweek.outputs.year }}'
        push: origin ${{ github.head_ref }}

  update_db:
    needs: delete_db_and_plots
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.client_payload.ref }}
        repository: killenden/${{ github.event.client_payload.repo_name }}
    
    - name: Print checked out branch
      run: |
        echo "Checked out branch: $(git rev-parse --abbrev-ref HEAD)"
    
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas numpy matplotlib scikit-learn pysqlite3 beautifulsoup4 requests
    
    - name: Run stats/YearAndWeek.py script
      id: run_yearandweek
      run: |
        python stats/YearAndWeek.py
        echo "year=$(cat $GITHUB_OUTPUT | grep '^year=' | cut -d'=' -f2-)" >> $GITHUB_OUTPUT
        echo "weeks=$(cat $GITHUB_OUTPUT | grep '^weeks=' | cut -d'=' -f2-)" >> $GITHUB_OUTPUT
      
    - name: Print year and weeks
      run: |
        echo "Year: ${{ steps.run_yearandweek.outputs.year }}"
        echo "Weeks: ${{ steps.run_yearandweek.outputs.weeks }}"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas numpy matplotlib scikit-learn beautifulsoup4 requests

    - name: Run stats/UpdateDatabase.py script
      run: python stats/UpdateDatabase.py ${{ steps.run_yearandweek.outputs.year }}


    - name: Stage changes
      run: |
        git add -A
      
    - name: Check for changes
      run: |
        git status
        git diff

    - name: Commit changes
      uses: EndBug/add-and-commit@v9
      with:
        default_author: github_actions
        message: '[BOT] Update database for DB number ${{ steps.run_yearandweek.outputs.year }}'
        push: origin ${{ github.head_ref }}

  update_plots:
    needs: update_db
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.client_payload.ref }}
        repository: killenden/${{ github.event.client_payload.repo_name }}
    
    - name: Print checked out branch
      run: |
        echo "Checked out branch: $(git rev-parse --abbrev-ref HEAD)"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas numpy matplotlib scikit-learn pysqlite3 beautifulsoup4 requests
    
    - name: Run stats/YearAndWeek.py script
      id: run_yearandweek
      run: |
        python stats/YearAndWeek.py
        echo "year=$(cat $GITHUB_OUTPUT | grep '^year=' | cut -d'=' -f2-)" >> $GITHUB_OUTPUT
        echo "weeks=$(cat $GITHUB_OUTPUT | grep '^weeks=' | cut -d'=' -f2-)" >> $GITHUB_OUTPUT
      
    - name: Print year and weeks
      run: |
        echo "Year: ${{ steps.run_yearandweek.outputs.year }}"
        echo "Weeks: ${{ steps.run_yearandweek.outputs.weeks }}"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas numpy matplotlib scikit-learn pysqlite3 beautifulsoup4 requests

    - name: Run stats/GitHubActions.py Script
      run: |
        python stats/GitHubActions.py ${{ steps.run_yearandweek.outputs.year }} ${{ steps.run_yearandweek.outputs.weeks }}

    - name: Stage changes
      run: |
        git add -A

    - name: Check for changes
      run: |
        git status
        git diff

    - name: Commit changes
      uses: EndBug/add-and-commit@v9
      with:
        add: |
          ./stats/plots/${{ steps.run_yearandweek.outputs.year }}
        default_author: github_actions
        message: '[BOT] Update graphs for DB number ${{ steps.run_yearandweek.outputs.year }}'
        push: origin ${{ github.head_ref }}
    

