name: Delete DB and Plots
on:
  pull_request:
    branches:
      - '**'  # Run on all branches for pull requests

jobs:
  delete_db_and_plots:
    if: contains(github.event.pull_request.title, 'Update Plots and Database')
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.ref }}
        repository: ${{ github.event.pull_request.head.repo.full_name }}

    - name: Print checked out branch
      run: |
        echo "Checked out branch: $(git rev-parse --abbrev-ref HEAD)"
        

    - name: Set Values
      id: set_values
      run: |
        echo "db_number=2024" >> $GITHUB_ENV
        echo "week_number=18" >> $GITHUB_ENV
        echo "::set-output name=db_number::2024"
        echo "::set-output name=week_number::18"

    - name: Delete old db if they exist
      run: |
        db_number=${{ steps.set_values.outputs.db_number }}
        if [ -f "database/$db_number.db" ]; then
          rm -r database/$db_number.db
          echo "db_deleted=true" >> $GITHUB_ENV
        else
          echo "db_deleted=false" >> $GITHUB_ENV
        fi

    - name: Delete old plots if they exist
      run: |
        db_number=${{ steps.set_values.outputs.db_number }}
        if [ -d "$db_number/plots" ]; then
          rm -r $db_number/plots/*.png
          echo "plots_deleted=true" >> $GITHUB_ENV
        else
          echo "plots_deleted=false" >> $GITHUB_ENV
        fi
    
    - name: Set output
      id: set_output
      run: |
        echo "::set-output name=db_deleted::${{ env.db_deleted }}"
        echo "::set-output name=plots_deleted::${{ env.plots_deleted }}"
  
    - name: Print output
      run: |
        echo "DB Deleted: ${{ steps.set_output.outputs.db_deleted }}"
        echo "Plots Deleted: ${{ steps.set_output.outputs.plots_deleted }}"

    - name: Stage changes
      run: |
        git add -A

    - name: Check for changes
      run: |
        git status
        git diff

    - name: Commit changes
      uses: EndBug/add-and-commit@v9
      with:
        add: '.'
        default_author: github_actions
        message: '[BOT] Delete graphs and database for DB number ${{ steps.set_values.outputs.db_number }}'
        push: origin ${{ github.head_ref }}

  update_db:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.ref }}
        repository: ${{ github.event.pull_request.head.repo.full_name }}
    
    - name: Print checked out branch
      run: |
        echo "Checked out branch: $(git rev-parse --abbrev-ref HEAD)"

    - name: Set Values
      id: set_values
      run: |
        echo "db_number=2024" >> $GITHUB_ENV
        echo "week_number=18" >> $GITHUB_ENV
        echo "::set-output name=db_number::2024"
        echo "::set-output name=week_number::18"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas numpy matplotlib scikit-learn pysqlite3 beautifulsoup4 requests

    - name: Run FootballDB/main.py script
      run: python FootballDB/main.py


    - name: Stage changes
      run: |
        git add -A
      
    - name: Check for changes
      run: |
        git status
        git diff

    - name: Commit changes
      uses: EndBug/add-and-commit@v9
      with:
        default_author: github_actions
        message: '[BOT] Update database for DB number ${{ steps.set_values.outputs.db_number }}'
        push: origin ${{ github.head_ref }}

  update_plots:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.ref }}
        repository: ${{ github.event.pull_request.head.repo.full_name }}
    
    - name: Print checked out branch
      run: |
        echo "Checked out branch: $(git rev-parse --abbrev-ref HEAD)"

    - name: Set Values
      id: set_values
      run: |
        echo "db_number=2024" >> $GITHUB_ENV
        echo "week_number=18" >> $GITHUB_ENV
        echo "::set-output name=db_number::2024"
        echo "::set-output name=week_number::18"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas numpy matplotlib scikit-learn pysqlite3 beautifulsoup4 requests

    - name: Run GitHubActions.py Script
      run: |
        python GitHubActions.py ${{ env.db_number }} ${{ env.week_number }}

    - name: Stage changes
      run: |
        git add -A

    - name: Check for changes
      run: |
        git status
        git diff

    - name: Commit changes
      uses: EndBug/add-and-commit@v9
      with:
        add: |
          ./${{ steps.set_values.outputs.db_number }}/plots
        default_author: github_actions
        message: '[BOT] Update graphs for DB number ${{ steps.set_values.outputs.db_number }}'
        push: origin ${{ github.head_ref }}
    

