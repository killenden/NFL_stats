name: Update DB
on:
  repository_dispatch:
    types: [update_db]

jobs:
  update_db:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.client_payload.branch }}
    
    - name: Print checked out branch
      run: |
        echo "Checked out branch: $(git rev-parse --abbrev-ref HEAD)"

    - name: Set Values
      id: set_values
      run: |
        echo "db_number=${{ github.event.client_payload.db_number }}" >> $GITHUB_ENV
        echo "week_number=${{ github.event.client_payload.week_number }}" >> $GITHUB_ENV
        echo "::set-output name=db_number::${{ github.event.client_payload.db_number }}"
        echo "::set-output name=week_number::${{ github.event.client_payload.week_number }}"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas numpy matplotlib scikit-learn pysqlite3 beautifulsoup4 requests

    - name: Run FootballDB/main.py script
      run: python FootballDB/main.py


    - name: Stage changes
      run: |
        git add -A
      
    - name: Check for changes
      run: |
        git status
        git diff

    - name: Commit changes
      uses: EndBug/add-and-commit@v9
      with:
        default_author: github_actions
        message: '[BOT] Update database for DB number ${{ steps.set_values.outputs.db_number }}'
        push: origin ${{ github.event.client_payload.branch }}

    - name: Trigger another workflow
      run: |
        curl -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/dispatches \
          -d '{"event_type":"update_plots", "client_payload": {"db_number": "${{ steps.set_values.outputs.db_number }}", "week_number": "${{ steps.set_values.outputs.week_number }}", "branch": "${{ github.head_ref }}"}}'
    

  
